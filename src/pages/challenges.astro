---
import "@/styles/global.css"
import "@/styles/challenges.css"
import Navigation from "@/components/Navigation.astro"
import Footer from '@/components/Footer.astro';
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <title>QUT AI & ML Society</title>
  </head>
  <body class="background-network">
    <Navigation />

    <main class="main-content">
      <div class="page-header">
        <h1 class="page-title">Challenges</h1>
      </div>

      <div class="controls-spacing">
        <div class="filter-buttons grid">
          <button type="button" class="filter-btn active" data-topic="All">All</button>
          <button type="button" class="filter-btn" data-topic="Linear Regression">
            Linear Regression
          </button>
          <button type="button" class="filter-btn" data-topic="Logistic Regression">
            Logistic Regression
          </button>
          <button type="button" class="filter-btn" data-topic="K-Nearest Neighbours">
            K-Nearest Neighbours
          </button>
          <button type="button" class="filter-btn" data-topic="Convolutional Neural Networks">
            Convolutional Neural Networks
          </button>
          <button type="button" class="filter-btn" data-topic="Random Forest">
            Random Forests
          </button>
          <button type="button" class="filter-btn" data-topic="Clustering">
            Clustering
          </button>
          <button type="button" class="filter-btn" data-topic="Transformers">
            Transformers
          </button>
          <button type="button" class="filter-btn" data-topic="Reinforcement Learning">
            Reinforcement Learning
          </button>
        </div>


        <!-- Controls: Search | Filter | Sort -->
        <div class="controls-wrapper">
          <!-- Search box -->
          <input type="text"
                id="searchInput"
                placeholder="Search challenge name..."
                class="search-bar" />

          <!-- Sort dropdown: we'll only show this on mobile -->
          <div class="sort-dropdown-container">
            <button id="sortDropdownBtn"
                    class="sort-dropdown-toggle">
              Sort by ▾
            </button>
            <ul id="sortDropdown"
                class="sort-dropdown-list hidden">
              <li class="sort-dropdown-item" data-index="0" data-type="number">
                Number
              </li>
              <li class="sort-dropdown-item" data-index="1" data-type="string">
                Challenge
              </li>
              <li class="sort-dropdown-item" data-index="2" data-type="difficulty">
                Difficulty
              </li>
              <li class="sort-dropdown-item" data-index="3" data-type="string">
                Topic
              </li>
            </ul>
          </div>
        </div>
      </div>
                
      <section class="challenge-table-section">
    
        <!-- Table -->
        <div class="table-wrapper px-6">
          <table class="challenge-table w-full">
            <colgroup>
              <col style="width: 5%;" />     <!-- ID column -->
              <col style="width: 50%;" />    <!-- Project name -->
              <col style="width: 15%;" />    <!-- Difficulty -->
              <col style="width: 30%;" />    <!-- Topic -->
            </colgroup>
            <thead>
            <tr>
              <th class="sortable" data-index="0" data-type="number">#</th>
              <th class="sortable" data-index="1" data-type="string">Challenge</th>
              <th class="sortable" data-index="2" data-type="difficulty">Difficulty</th>
              <th class="sortable" data-index="3" data-type="string">Topic</th>
            </tr>
          </thead>
           <tbody>
             <tr class="no-data" style="display: none;">
              <td colspan="4" style="text-align: center; color: #ccc; font-style: italic;">
                No matching challenges found.
              </td>
            </tr>
            
            <!-- Linear Regression (Beginner) -->
            <tr data-topic="Linear Regression" onclick="window.location.href='https://github.com/QUT-AMS/Linear-Regression';" style="cursor: pointer;">
              <td>1</td>
              <td>Best Selling Video Games</td>
              <td style="color:forestgreen">Beginner</td>
              <td>Linear Regression</td>
            </tr>
            <tr data-topic="Linear Regression" onclick="window.location.href='https://github.com/QUT-AMS/Linear-Regression';" style="cursor: pointer;">
              <td>2</td>
              <td>Energy Consumption</td>
              <td style="color:forestgreen">Beginner</td>
              <td>Linear Regression</td>
            </tr>
            <tr data-topic="Linear Regression" onclick="window.location.href='https://github.com/QUT-AMS/Linear-Regression';" style="cursor: pointer;">
              <td>3</td>
              <td>Formula 1</td>
              <td style="color:forestgreen">Beginner</td>
              <td>Linear Regression</td>
            </tr>
            <tr data-topic="Linear Regression" onclick="window.location.href='https://github.com/QUT-AMS/Linear-Regression';" style="cursor: pointer;">
              <td>4</td>
              <td>Pokemon</td>
              <td style="color:forestgreen">Beginner</td>
              <td>Linear Regression</td>
            </tr>
            <tr data-topic="Linear Regression" onclick="window.location.href='https://github.com/QUT-AMS/Linear-Regression';" style="cursor: pointer;">
              <td>5</td>
              <td>Retail Sales Trends</td>
              <td style="color:forestgreen">Beginner</td>
              <td>Linear Regression</td>
            </tr>

            <!-- Logistic Regression (Beginner) -->
            <tr data-topic="Logistic Regression" onclick="window.location.href='https://github.com/QUT-AMS/Logistic-Regression';" style="cursor: pointer;">
              <td>6</td>
              <td>Asteroids NASA</td>
              <td style="color:forestgreen">Beginner</td>
              <td>Logistic Regression</td>
            </tr>
            <tr data-topic="Logistic Regression" onclick="window.location.href='https://github.com/QUT-AMS/Logistic-Regression';" style="cursor: pointer;">
              <td>7</td>
              <td>Bank Loans</td>
              <td style="color:forestgreen">Beginner</td>
              <td>Logistic Regression</td>
            </tr>
            <tr data-topic="Logistic Regression" onclick="window.location.href='https://github.com/QUT-AMS/Logistic-Regression';" style="cursor: pointer;">
              <td>8</td>
              <td>Fake News</td>
              <td style="color:forestgreen">Beginner</td>
              <td>Logistic Regression</td>
            </tr>
            <tr data-topic="Logistic Regression" onclick="window.location.href='https://github.com/QUT-AMS/Logistic-Regression';" style="cursor: pointer;">
              <td>9</td>
              <td>Heart Disease Predictions</td>
              <td style="color:forestgreen">Beginner</td>
              <td>Logistic Regression</td>
            </tr>

            <!-- K-Nearest Neighbours (Beginner) -->
            <tr data-topic="K-Nearest Neighbours" onclick="window.location.href='https://github.com/QUT-AMS/K-Nearest-Neighbours';" style="cursor: pointer;">
              <td>10</td>
              <td>Glass Classification</td>
              <td style="color:forestgreen">Beginner</td>
              <td>K-Nearest Neighbours</td>
            </tr>
            <tr data-topic="K-Nearest Neighbours" onclick="window.location.href='https://github.com/QUT-AMS/K-Nearest-Neighbours';" style="cursor: pointer;">
              <td>11</td>
              <td>Adult Income</td>
              <td style="color:forestgreen">Beginner</td>
              <td>K-Nearest Neighbours</td>
            </tr>
            <tr data-topic="K-Nearest Neighbours" onclick="window.location.href='https://github.com/QUT-AMS/K-Nearest-Neighbours';" style="cursor: pointer;">
              <td>12</td>
              <td>Physical Activity</td>
              <td style="color:forestgreen">Beginner</td>
              <td>K-Nearest Neighbours</td>
            </tr>

            <!-- Convolutional Neural Networks (Intermediate) -->
            <tr data-topic="Convolutional Neural Networks" onclick="window.location.href='https://github.com/QUT-AMS/Convoluted-Neural-Networks';" style="cursor: pointer;">
              <td>13</td>
              <td>Cats vs Dogs</td>
              <td style="color:goldenrod">Intermediate</td>
              <td>CNN</td>
            </tr>
            <tr data-topic="Convolutional Neural Networks" onclick="window.location.href='https://github.com/QUT-AMS/Convoluted-Neural-Networks';" style="cursor: pointer;">
              <td>14</td>
              <td>Concrete Cracks</td>
              <td style="color:goldenrod">Intermediate</td>
              <td>CNN</td>
            </tr>
            <tr data-topic="Convolutional Neural Networks" onclick="window.location.href='https://github.com/QUT-AMS/Convoluted-Neural-Networks';" style="cursor: pointer;">
              <td>15</td>
              <td>Garbage Type</td>
              <td style="color:goldenrod">Intermediate</td>
              <td>CNN</td>
            </tr>
            <tr data-topic="Convolutional Neural Networks" onclick="window.location.href='https://github.com/QUT-AMS/Convoluted-Neural-Networks';" style="cursor: pointer;">
              <td>16</td>
              <td>Musical Instruments</td>
              <td style="color:goldenrod">Intermediate</td>
              <td>CNN</td>
            </tr>
            <tr data-topic="Convolutional Neural Networks" onclick="window.location.href='https://github.com/QUT-AMS/Convoluted-Neural-Networks';" style="cursor: pointer;">
              <td>17</td>
              <td>Vehicle Type</td>
              <td style="color:goldenrod">Intermediate</td>
              <td>CNN</td>
            </tr>

            <!-- Random Forests (Intermediate) -->
            <tr data-topic="Random Forest" onclick="window.location.href='https://github.com/QUT-AMS/Random-Forests';" style="cursor: pointer;">
              <td>18</td>
              <td>Cybersecurity Attacks</td>
              <td style="color:goldenrod">Intermediate</td>
              <td>Random Forest</td>
            </tr>
            <tr data-topic="Random Forest" onclick="window.location.href='https://github.com/QUT-AMS/Random-Forests';" style="cursor: pointer;">
              <td>19</td>
              <td>Customer Churn</td>
              <td style="color:goldenrod">Intermediate</td>
              <td>Random Forest</td>
            </tr>
            <tr data-topic="Random Forest" onclick="window.location.href='https://github.com/QUT-AMS/Random-Forests';" style="cursor: pointer;">
              <td>20</td>
              <td>Marine Engine</td>
              <td style="color:goldenrod">Intermediate</td>
              <td>Random Forest</td>
            </tr>

            <!-- Clustering (Beginner) -->
            <tr data-topic="Clustering" onclick="window.location.href='https://github.com/QUT-AMS/Clustering';" style="cursor: pointer;">
              <td>21</td>
              <td>Customer Groups</td>
              <td style="color:goldenrod">Intermediate</td>
              <td>Clustering</td>
            </tr>
            <tr data-topic="Clustering" onclick="window.location.href='https://github.com/QUT-AMS/Clustering';" style="cursor: pointer;">
              <td>22</td>
              <td>Penguin Species</td>
              <td style="color:goldenrod">Intermediate</td>
              <td>Clustering</td>
            </tr>
            <tr data-topic="Clustering" onclick="window.location.href='https://github.com/QUT-AMS/Clustering';" style="cursor: pointer;">
              <td>23</td>
              <td>Social Networks</td>
              <td style="color:goldenrod">Intermediate</td>
              <td>Clustering</td>
            </tr>
            <tr data-topic="Clustering" onclick="window.location.href='https://github.com/QUT-AMS/Clustering';" style="cursor: pointer;">
              <td>24</td>
              <td>General Clustering Exercises</td>
              <td style="color:goldenrod">Intermediate</td>
              <td>Clustering</td>
            </tr>

            <!-- Transformers (Advanced) -->
            <tr data-topic="Transformers" onclick="window.location.href='https://github.com/QUT-AMS/Transformers';" style="cursor: pointer;">
              <td>25</td>
              <td>Action Recognition</td>
              <td style="color:crimson">Advanced</td>
              <td>Transformers</td>
            </tr>
            <tr data-topic="Transformers" onclick="window.location.href='https://github.com/QUT-AMS/Transformers';" style="cursor: pointer;">
              <td>26</td>
              <td>Reddit Breakup Stories</td>
              <td style="color:crimson">Advanced</td>
              <td>Transformers</td>
            </tr>
            <tr data-topic="Transformers" onclick="window.location.href='https://github.com/QUT-AMS/Transformers';" style="cursor: pointer;">
              <td>27</td>
              <td>YouTube Videos</td>
              <td style="color:crimson">Advanced</td>
              <td>Transformers</td>
            </tr>

            <!-- Reinforcement Learning (Advanced) -->
            <tr data-topic="Reinforcement Learning" onclick="window.location.href='https://github.com/QUT-AMS/Reinforcement-Learning';" style="cursor: pointer;">
              <td>28</td>
              <td>Nokia Snake</td>
              <td style="color:crimson">Advanced</td>
              <td>Reinforcement Learning</td>
            </tr>
          </tbody>


          </table>
        </div>
      </section>
    </main>

    <Footer />
  </body>
</html>

<script>
  const searchInput        = document.getElementById('searchInput');
  const filterButtons      = document.querySelectorAll('.filter-btn');
  const tbody              = document.querySelector('.challenge-table tbody');
  const tbodyRows          = () => Array.from(tbody.querySelectorAll('tr'));
  const headers            = document.querySelectorAll('.challenge-table thead th.sortable');
  const noDataRow         = tbody.querySelector('tr.no-data');  // grab our message row

  // NEW: mobile-sort dropdown elements
  const sortDropdownBtn    = document.getElementById('sortDropdownBtn');
  const sortDropdown       = document.getElementById('sortDropdown');
  const sortDropdownItems  = document.querySelectorAll('.sort-dropdown-item');

  let currentSortIndex     = null;
  let sortDirectionAsc     = true;

  function dataRows() {
    return Array.from(tbody.querySelectorAll('tr:not(.no-data)'));
  }

  // Topics filter setup (unchanged)
  const allTopics = Array.from(filterButtons)
    .map(b => b.dataset.topic)
    .filter(t => t !== 'All');
  filterButtons.forEach(b => b.classList.add('active'));

  function getActiveTopics() {
    const allBtn = document.querySelector('.filter-btn[data-topic="All"]');
    if (allBtn.classList.contains('active')) {
      return [...allTopics];
    }
    return Array.from(filterButtons)
      .filter(b => b.classList.contains('active'))
      .map(b => b.dataset.topic);
  }

  function applyFilters() {
    const q      = searchInput.value.trim().toLowerCase();
    const active = getActiveTopics();

    // hide/show each real row
    dataRows().forEach(row => {
      const name  = row.cells[1].textContent.toLowerCase();
      const topic = row.dataset.topic;
      const ok    = name.includes(q) && active.includes(topic);
      row.style.display = ok ? '' : 'none';
    });

    // count how many real rows remain visible
    const anyVisible = dataRows().some(r => r.style.display !== 'none');

    // toggle our no-data message
    noDataRow.style.display = anyVisible ? 'none' : '';
  }


  function handleFilterClick(btn) {
    const topic        = btn.dataset.topic;
    const allBtn       = document.querySelector('.filter-btn[data-topic="All"]');
    const specificBtns = Array.from(filterButtons)
                             .filter(b => b.dataset.topic !== 'All');

    if (topic === 'All') {
      const newState = !allBtn.classList.contains('active');
      allBtn.classList.toggle('active', newState);
      specificBtns.forEach(b => b.classList.toggle('active', newState));
    } else {
      btn.classList.toggle('active');
      const allSelected = specificBtns.every(b => b.classList.contains('active'));
      allBtn.classList.toggle('active', allSelected);
    }
    applyFilters();
  }

  filterButtons.forEach(b =>
    b.addEventListener('click', () => handleFilterClick(b))
  );
  searchInput.addEventListener('input', applyFilters);
  applyFilters();

  // REFACTORED: central sort function (fully handling the “no-data” row)
function sortRows(index, type) {
  // 1) Toggle sort direction if same column, otherwise reset to ascending
  if (currentSortIndex === index) {
    sortDirectionAsc = !sortDirectionAsc;
  } else {
    currentSortIndex   = index;
    sortDirectionAsc   = true;
  }

  // 2) Define custom order for difficulty
  const difficultyOrder = { beginner: 0, intermediate: 1, advanced: 2 };

  // 3) Grab only the actual data rows (exclude the no-data placeholder)
  const dataRows = Array.from(tbody.querySelectorAll('tr:not(.no-data)'));

  // 4) Sort them based on type
  const sorted = dataRows.sort((a, b) => {
    const aText = a.cells[index].textContent.trim().toLowerCase();
    const bText = b.cells[index].textContent.trim().toLowerCase();

    if (type === 'number') {
      return sortDirectionAsc
        ? aText - bText
        : bText - aText;
    }

    if (type === 'difficulty') {
      return sortDirectionAsc
        ? difficultyOrder[aText] - difficultyOrder[bText]
        : difficultyOrder[bText] - difficultyOrder[aText];
    }

    // string fallback
    return sortDirectionAsc
      ? aText.localeCompare(bText)
      : bText.localeCompare(aText);
  });

  // 5) Clear out existing rows
  tbody.innerHTML = '';

  // 6) Re-append sorted data rows
  sorted.forEach(row => tbody.appendChild(row));

  // 7) Always re-attach the no-data row at the end
  tbody.appendChild(noDataRow);

  // 8) Re-run filters so “no data” message visibility is correct
  applyFilters();
}

  // hook up header clicks
  headers.forEach(th =>
    th.addEventListener('click', () =>
      sortRows(
        parseInt(th.dataset.index),
        th.dataset.type
      )
    )
  );

  // toggle dropdown visibility
  sortDropdownBtn.addEventListener('click', () => {
    sortDropdown.classList.toggle('show');
  });

  // hook up each dropdown item
  sortDropdownItems.forEach(item =>
    item.addEventListener('click', () => {
      const idx  = parseInt(item.dataset.index);
      const type = item.dataset.type;

      // perform sort
      sortRows(idx, type);

      // hide dropdown again
      sortDropdown.classList.remove('show');
    })
  );
</script>
